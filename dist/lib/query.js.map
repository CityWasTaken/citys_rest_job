{"version":3,"file":"query.js","sourceRoot":"","sources":["../../src/lib/query.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAE7C,MAAM,CAAC,KAAK,UAAU,iBAAiB;IACnC,MAAM,GAAG,GAAG;;;;;KAKX,CAAC;IACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzC,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,WAAW;IAC7B,MAAM,GAAG,GAAG;;;;;;;;;KASX,CAAC;IACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzC,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,eAAe;IACjC,MAAM,GAAG,GAAG;;;;;;;;;;;;;;;;KAgBX,CAAC;IACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzC,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,OAAe,EAAE,UAAkB,EAAE,SAAiB;IACvF,MAAM,GAAG,GAAG;;;;KAIX,CAAC;IACF,MAAM,MAAM,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;IAChD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACjD,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC","sourcesContent":["import client from '../config/connection.js';\n\nexport async function getAllDepartments() {\n    const sql = `\n    SELECT \n        id,\n        name\n    FROM department\n    `;\n    const { rows } = await client.query(sql);\n    return rows;\n}\n\nexport async function getAllRoles() {\n    const sql = `\n    SELECT \n        role.id,\n        role.title,\n        role.salary,\n        department.name AS department_name\n    FROM role\n    JOIN department\n        ON role.department_id = department.id\n    `;\n    const { rows } = await client.query(sql);\n    return rows;\n}\n\nexport async function getAllEmployees() {\n    const sql = `\n    SELECT \n        employee.id,\n        employee.first_name,\n        employee.last_name,\n        role.title AS role_title,\n        department.name AS department_name,\n        role.salary,\n        CONCAT(manager.first_name, ' ', manager.last_name) AS manager_name\n    FROM employee\n    JOIN role\n        ON employee.role_id = role.id\n    JOIN department\n        ON role.department_id = department.id\n    LEFT JOIN employee AS manager\n        ON employee.manager_id = manager.id\n    `;\n    const { rows } = await client.query(sql);\n    return rows;\n}\n\nexport async function createEmployee(role_id: number, first_name: string, last_name: string) {\n    const sql = `\n    INSERT INTO employee (role_id, first_name, last_name)\n    VALUES ($1, $2, $3)\n    RETURNING *\n    `;\n    const values = [role_id, first_name, last_name];\n    const { rows } = await client.query(sql, values);\n    return rows[0];\n}"]}